{{ define "object/builder" }}
{{- $builderName := (printf "%sBuilder" .Name) }}
type {{ $builderName }} struct {
  mu sync.Mutex
  err error
  once sync.Once
  object *{{ .Name }}
}

{{- if hasTemplate "ext/builder/header" }}
  {{- runTemplate "ext/builder/header" $ }}
{{- end }}

// New{{ $builderName }} creates a new {{ $builderName }} instance.
// {{ $builderName }} is safe to be used uninitialized as well.
func New{{ $builderName }}() *{{ $builderName }} {
  return &{{ $builderName }}{}
}

func (b *{{ $builderName }}) initialize() {
  b.err = nil
  b.object = &{{ .Name }}{}
}

{{- range $i, $field := .Fields }}
{{- $type := $field.GetType }}
{{- if $field.GetExtension }}{{ continue }}{{ end }}
func (b *{{ $builderName }}) {{ $field.GetName }}(in {{ if $type.SliceStyleInitializerArgument }}...{{ $type.GetElement }}{{ else }}{{ $type.GetName }}{{ end }}) *{{ $builderName }} {
  b.once.Do(b.initialize)
  b.mu.Lock()
  defer b.mu.Unlock()
  _ = b.object.Set({{ $field.GetKeyName $ }}, in)
  return b
}
{{- end }}

func (b *{{ $builderName }}) Build() (*{{ .Name }}, error) {
  b.mu.Lock()
  defer b.mu.Unlock()
  err := b.err
  if err != nil {
    return nil, err
  }
{{- range $i, $field := .Fields }}
  {{- if $field.GetExtension }}{{ continue }}{{ end }}
  {{- if $field.GetRequired }}
  if b.object.{{ $field.GetUnexportedName }} == nil {
    return nil, fmt.Errorf("required field '{{ $field.Name }}' not initialized")
  }
  {{- end }}
{{- end }}
  obj := b.object
  b.once = sync.Once{}
  b.once.Do(b.initialize)
  return obj, nil
}

func (b *{{ $builderName }}) MustBuild() *{{ .Name }} {
  object, err := b.Build()
  if err != nil {
    panic(err)
  }
  return object
}

{{- if hasTemplate "ext/builder/footer" }}
  {{- runTemplate "ext/builder/footer" $ }}
{{- end }}
{{ end }}
